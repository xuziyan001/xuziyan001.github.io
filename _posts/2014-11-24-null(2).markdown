---
layout: post
title:  "Null(2)"
date:   2014-11-24 10:20:00
categories: Essay update
---
<p>
好吧，我实在是太懒了，说好的常更新呢。。。<br />
这两个月一直在忙乐UU的事情，其实说忙也没有啥大的忙头，主要是项目这边由于是半路插手，对于很多细节部分了解得不够多，搞得大部分测试时间都在自己闹乌龙、向开发询问实现逻辑以及部署环境。在我的角度来看，部门内研发和产品负责的部分太多、测试对项目整体的参与度不够高，虽然在prd的阐述下能够跳出实现细节甩给研发同学一个bug，但是缺乏对bug的定位，甚至有时候出现bug的原因是因为没连上网。。。还有一些大大小小的问题，总结下来大概有一下几个点：<br />
<ul>
<p>研发责任过大，除了代码功能实现和自测外，code review也是本部门的人负责，这样代码的内部实现只是在研发内部知晓，没有一个free mind去发现其中潜在的错误，并且对研发的同学也是一些额外的工作量，有code review的时间，还不如把自己写的代码概括为一个完整的文档来得实在。</p><br />
<p>各模块测试人员没有把相应的数据修改地址和相关工具整理成册，在需要修改线下数据的时候，每次都需要问研发同学要地址或者麻烦他们修改，但有时候测试数据修改是比较频繁的，所以如果相关模块测试人员整理出数据库名及表名/URL，并且附上每字段的含义，就可以大幅度减少向研发同学无意义的讨教时间。</p><br />
<p>代码复用是好事，但是复用的程度应该要在自己的掌控范围之内。阿里内部的MTL平台，里面用来检测应用稳定性的工具根本不能用，出的报表莫名其妙，实际上，自己出一个测试APP稳定性的平台并不是一个大工作量的事情，并且自己掌握得代码可以更加方便它的使用和维护，出了什么问题也不用通过在线工具联系相关人员，最重要的是出报表的时候可以跟开发同学解释为什么会出现这样的情况，显得测试过程更加的专业。</p><br />
<p>当多个项目复用同一套系统时，该系统的改动应该要让各项目的测试负责人知悉，否则一旦出了问题，花了一大把时间定位，结果是另一个项目的同学修改了数据，导致这一项目的同学数据错误，当成bug报给研发同学去处理，额外浪费了研发同学的时间去定位问题。</p><br />
<p>整个工作过程中没有流程化管理，整个感觉就是不够专业。。。</p>
</ul>
吐槽完毕。。。虽然有着这样那样的问题，但是不得不说，整个部门的大环境还是超级棒的，研发同学会不厌其烦的跟你解释每个区块的实现逻辑是怎么样；如何去改动数据才能保证不影响到其他内容；真正发现bug的时候会感到不好意思，并且能在第一时间修复。产品同学会根据你写测试用例的需求熬夜补需求文档；每次小需求的变动都会和你商量对策，问问你对这次改动的意见；甚至在加班到深夜的时候，跟你吐槽公司的预算审批慢，运营推的商品不够给力，其他产品的资源优势等等等。运营同学会台球！聚餐！三国杀！哈哈。<br />
最后还有亲爱的测试小伙伴们，大家对于新人有着无限的包容和照顾，nothing more to say but thx。<br />
在实习的最后一个月里，认识了比以前多了好几倍的小伙伴，说到底还是要自己放得开，才能去迎接新的朋友圈子。无奈在阿里的日子所剩不多，只能够倍加珍惜这段时光。和当时在三星研究院的感觉完全不同，阿里有着本土的文化和传承，部门内在人员组建方面花了很大的功夫，对员工的信任度也与那些日韩企业不可同日而语，部门内部也没有学历、职位、年龄的歧视，新人们不仅可以在闲暇时光打打闹闹增进友谊，犯犯中二病，在工作的时候也能学习前辈们的告诫和经验，没有藏着掖着说一半的那种故作姿态。虽然社会不比学校，但这里有太多对我胃口的东西，文静小姑娘满背的纹身、码农加班到深夜，在楼下抽烟、PD对产品，对金钱，对人际关系的理解。。。在这个没有太多条条框框规定的地方，每个人突出个性的部分在我看来都是平淡生活中的亮点，反而在学校端着端着，被强制培养成了同样的物种，太过无聊。<br />
也许是不成熟，对身边所有平庸的东西都感到抵制，只有健身房的肌肉男纹着大花臂、社交能力极强的码农、说话不爱拐弯，三句话不离“操”的小姑娘，才能让我对这个世界充满好奇，若是整天对着电脑撸，那还不如回家卖肉来得开心，至少卖肉还能说两句人话。<br />
到这，后天就正式从阿里巴巴离职了，估计今后来这边的几率也不会太大，不知道下一站会是哪？
</p>